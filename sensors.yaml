 # - platform: crimereports
   # name: Crime Reports
   # radius: 1000

 # - platform: ring
   # monitored_conditions:
   # - 'battery'

 # - platform: ups
   # username: !secret upsuser
   # password: !secret upspass

 # - platform: fedex
   # username: !secret fedexuser
   # password: !secret fedexpass

 # - platform: fitbit
   # clock_format: 12H
   # monitored_resources:
    # - "sleep/startTime"

 - platform: moon

 - platform: yr

 - platform: season

 - platform: template
   sensors:
     washer_running:
       value_template: "{{ states('sensor.washer_power_2') | int > 5 }}"

 - platform: template
   sensors:
     dryer_running:
       value_template: "{{ states('sensor.dryer_power_2') | int > 5}}"

 - platform: template
   sensors:
     dishwasher_running:
       value_template: "{{ states('sensor.dishwasher') | int > 5}}"

 # - platform: template
   # sensors:
     # den_motion_battery:
       # value_template: "{{ states.zwave.den_motion_sensor.attributes.battery_level }}"
       # unit_of_measurement: '%'

 - platform: template
   sensors:
     front_door_lock_battery:
       friendly_name: "Front Door Lock"
       value_template: "{{ state_attr('zwave.front_door_lock', 'battery_level') }}"
       unit_of_measurement: '%'
       device_class: battery

 - platform: template
   sensors:
     den_smoke_battery:
       friendly_name: "Den Smoke Sensor"
       value_template: "{{ state_attr('zwave.den_smoke', 'battery_level') }}"
       unit_of_measurement: '%'
       device_class: battery

 - platform: template
   sensors:
     frontyard_driveway_camera_power:
       friendly_name: Frontyard Driveway Camera Power
       value_template: "{{ state_attr('switch.camera3', 'power') }}"
       unit_of_measurement: "W"

 - platform: template
   sensors:
     garage_side_gate_camera_power:
       friendly_name: Garage Side Gate Camera Power
       value_template: "{{ state_attr('switch.camera1', 'power') }}"
       unit_of_measurement: "W"

 - platform: template
   sensors:
     frontyard_side_gate_camera_power:
       friendly_name: Frontyard Side Gate Camera Power
       value_template: "{{ state_attr('switch.frontyard', 'power') }}"
       unit_of_measurement: "W"

 - platform: pi_hole
   host: 192.168.1.47
   monitored_conditions:
   - ads_blocked_today
   - dns_queries_today
   - ads_percentage_today
   - domains_being_blocked

 - platform: radarr
   api_key: !secret radarr
   host: !secret househost
   urlbase: /radarr
   ssl: true
   port: 443
   monitored_conditions:
   - upcoming

 - platform: sonarr
   api_key: !secret sonarr
   host: !secret househost
   urlbase: /sonarr
   ssl: true
   port: 443
   monitored_conditions:
   - upcoming

 - platform: wunderground
   api_key: !secret wunderground
   monitored_conditions:
   - alerts
   - feelslike_f
   - heat_index_f
   - relative_humidity
   - station_id
   - temperature_string
   - temp_f
   - UV
   - weather
   - wind_gust_mph
   - wind_mph
   - wind_string
   - weather_1d
   - weather_1n
   - weather_2d
   - weather_2n
   - weather_3d
   - weather_3n

 - platform: template
   sensors:
     danny_next_event:
       friendly_name: Dannys Next Event
       value_template: >-
         {{ strptime(states.calendar.dshokouhi.attributes.start_time, "%Y-%m-%d %H:%M:%S").strftime("%A %B %d at %H:%M") }}:
         {{ states.calendar.dshokouhi.attributes.message }}
         {%- if states.calendar.dshokouhi.attributes.location %} at {{ states.calendar.dshokouhi.attributes.location -}}
         {% endif %}
       icon_template: >-
         {% if is_state('calendar.dshokouhi', 'on') %}
           mdi:message-alert
         {% else %}
           mdi:message
         {% endif %}

 - platform: template
   sensors:
     danny_next_meeting:
       friendly_name: Dannys Next Meeting
       value_template: >-
         {{ strptime(states.calendar.danny_work.attributes.start_time, "%Y-%m-%d %H:%M:%S").strftime("%A %B %d at %H:%M") }}:
         {{ states.calendar.danny_work.attributes.message }}
         {%- if states.calendar.danny_work.attributes.location %} at {{ states.calendar.danny_work.attributes.location -}}
         {% endif %}
       icon_template: >-
         {% if is_state('calendar.danny_work', 'on') %}
           mdi:message-alert
         {% else %}
           mdi:message
         {% endif %}

 - platform: template
   sensors:
     tosh_next_event:
       friendly_name: Toshs Next Event
       value_template: >-
         {{ strptime(states.calendar.shorteh7.attributes.start_time, "%Y-%m-%d %H:%M:%S").strftime("%A %B %d at %H:%M") }}:
         {{ states.calendar.shorteh7.attributes.message }}
         {%- if states.calendar.shorteh7.attributes.location %} at {{ states.calendar.shorteh7.attributes.location -}}
         {% endif %}
       icon_template: >-
         {% if is_state('calendar.shorteh7', 'on') %}
           mdi:message-alert
         {% else %}
           mdi:message
         {% endif %}

 - platform: template
   sensors:
     next_us_holiday:
       friendly_name: Next US Holiday
       value_template: >-
         {{ strptime(states.calendar.holidays_in_united_states.attributes.start_time, "%Y-%m-%d %H:%M:%S").strftime("%A, %B %d") }}:
         {{ states.calendar.holidays_in_united_states.attributes.message }}
       icon_template: >-
         {% if is_state('calendar.holidays_in_united_states', 'on') %}
           mdi:briefcase-check
         {% else %}
           mdi:domain
         {% endif %}

 - platform: template
   sensors:
     next_jewish_holiday:
       friendly_name: Next Jewish Holiday
       value_template: >-
         {{ strptime(states.calendar.jewish_holidays.attributes.start_time, "%Y-%m-%d %H:%M:%S").strftime("%A, %B %d") }}:
         {{ states.calendar.jewish_holidays.attributes.message }}
       icon_template: >-
         {% if is_state('calendar.jewish_holidays', 'on') %}
           mdi:briefcase-check
         {% else %}
           mdi:domain
         {% endif %}

 - platform: template
   sensors:
     den_smoke_status:
       value_template: '{%- if is_state("sensor.den_smoke_alarm_type", "0") %}
                         Idle
                         {%else%}
                           {%- if is_state("sensor.den_smoke_alarm_type", "1") %}
                           Fire
                           {%- elif is_state("sensor.den_smoke_alarm_type", "2") %}
                           CO2
                           {%- elif is_state("sensor.den_smoke_alarm_type", "12") %}
                           Testing
                           {%- elif is_state("sensor.den_smoke_alarm_type", "13") %}
                           Idle
                           {% else %}
                           Unknown
                           {%- endif %}
                         {%endif%}'
       friendly_name: 'Den Smoke'

 - platform: template
   sensors:
     bedroom_smoke_status:
       value_template: '{%- if is_state("sensor.bedroom_smoke_alarm_type", "0") %}
                         Idle
                         {%else%}
                           {%- if is_state("sensor.bedroom_smoke_alarm_type", "1") %}
                           Fire
                           {%- elif is_state("sensor.bedroom_smoke_alarm_type", "2") %}
                           CO2
                           {%- elif is_state("sensor.bedroom_smoke_alarm_type", "12") %}
                           Testing
                           {%- elif is_state("sensor.bedroom_smoke_alarm_type", "13") %}
                           Idle
                           {% else %}
                           Unknown
                           {%- endif %}
                         {%endif%}'
       friendly_name: 'Bedroom Smoke'

 - platform: template
   sensors:
     office_smoke_status:
       value_template: '{%- if is_state("sensor.office_smoke_alarm_type", "0") %}
                         Idle
                         {%else%}
                           {%- if is_state("sensor.office_smoke_alarm_type", "1") %}
                           Fire
                           {%- elif is_state("sensor.office_smoke_alarm_type", "2") %}
                           CO2
                           {%- elif is_state("sensor.office_smoke_alarm_type", "12") %}
                           Testing
                           {%- elif is_state("sensor.office_smoke_alarm_type", "13") %}
                           Idle
                           {% else %}
                           Unknown
                           {%- endif %}
                         {%endif%}'
       friendly_name: 'Office Smoke'

 - platform: template
   sensors:
     den_air_purifier_temp:
       value_template: "{{ ((states.fan.den_air_purifier.attributes.temperature * 9)/5 + 32)|round }}"
       friendly_name: Den Air Purifier Temperature
       unit_of_measurement: "F"
       device_class: temperature
       
 - platform: template
   sensors:
     den_air_purifier_humidity:
       value_template: "{{ states.fan.den_air_purifier.attributes.humidity }}"
       friendly_name: Den Air Purifier Humidity
       unit_of_measurement: "%"
       device_class: humidity
       
 - platform: template
   sensors:
     den_air_purifier_aqi:
       value_template: "{{ states.fan.den_air_purifier.attributes.aqi }}"
       friendly_name: Den Air Purifier AQI
       unit_of_measurement: AQI
       
 - platform: template
   sensors:
     bedroom_air_purifier_temp:
       value_template: "{{ ((states.fan.bedroom_air_purifier.attributes.temperature * 9)/5 + 32)|round}}"
       friendly_name: Bedroom Air Purifier Temperature
       unit_of_measurement: "F"
       device_class: temperature
       
 - platform: template
   sensors:
     bedroom_air_purifier_humidity:
       value_template: "{{ states.fan.bedroom_air_purifier.attributes.humidity }}"
       friendly_name: Bedroom Air Purifier Humidity
       unit_of_measurement: "%"
       device_class: humidity
       
 - platform: template
   sensors:
     bedroom_air_purifier_aqi:
       value_template: "{{ states.fan.bedroom_air_purifier.attributes.aqi }}"
       friendly_name: Bedroom Air Purifier AQI
       unit_of_measurement: AQI
       
 - platform: template
   sensors:
     living_room_air_purifier_temp:
       value_template: "{{ ((states.fan.living_room_air_purifier.attributes.temperature * 9)/5 + 32)|round }}"
       friendly_name: Living Room Air Purifier Temperature
       unit_of_measurement: "F"
       device_class: temperature
       
 - platform: template
   sensors:
     living_room_air_purifier_humidity:
       value_template: "{{ states.fan.living_room_air_purifier.attributes.humidity }}"
       friendly_name: Living Room Air Purifier Humidity
       unit_of_measurement: "%"
       device_class: humidity
       
 - platform: template
   sensors:
     living_room_air_purifier_aqi:
       value_template: "{{ states.fan.living_room_air_purifier.attributes.aqi }}"
       friendly_name: Living Room Air Purifier AQI
       unit_of_measurement: AQI
       
 - platform: template
   sensors:
     office_air_purifier_temp:
       value_template: "{{ ((states.fan.office_air_purifier.attributes.temperature * 9)/5 + 32)|round }}"
       friendly_name: Office Air Purifier Temperature
       unit_of_measurement: "F"
       device_class: temperature
       
 - platform: template
   sensors:
     office_air_purifier_humidity:
       value_template: "{{ states.fan.office_air_purifier.attributes.humidity }}"
       friendly_name: Office Air Purifier Humidity
       unit_of_measurement: "%"
       device_class: humidity
       
 - platform: template
   sensors:
     office_air_purifier_aqi:
       value_template: "{{ states.fan.office_air_purifier.attributes.aqi }}"
       friendly_name: Office Air Purifier AQI
       unit_of_measurement: AQI
       
 - platform: command_line
   name: Epson Ink Level Black
   command: /usr/bin/curl -X GET http://192.168.1.57/PRESENTATION/HTML/TOP/PRTINFO.HTML  | awk -F"'" '/Ink_K.PNG/ && $6+0 == $6 { printf "%.0f\n", $6 / 50 * 100; exit }'
   unit_of_measurement: '%'
   scan_interval: 14400

 - platform: command_line
   name: Epson Ink Level Magenta
   command: /usr/bin/curl -X GET http://192.168.1.57/PRESENTATION/HTML/TOP/PRTINFO.HTML  | awk -F"'" '/Ink_M.PNG/ && $6+0 == $6 { printf "%.0f\n", $6 / 50 * 100 }'
   unit_of_measurement: '%'
   scan_interval: 14400

 - platform: command_line
   name: Epson Ink Level Yellow
   command: /usr/bin/curl -X GET http://192.168.1.57/PRESENTATION/HTML/TOP/PRTINFO.HTML  | awk -F"'" '/Ink_Y.PNG/ && $6+0 == $6 { printf "%.0f\n", $6 / 50 * 100 }'
   unit_of_measurement: '%'
   scan_interval: 14400

 - platform: command_line
   name: Epson Ink Level Cyan
   command: /usr/bin/curl -X GET http://192.168.1.57/PRESENTATION/HTML/TOP/PRTINFO.HTML  | awk -F"'" '/Ink_C.PNG/ && $6+0 == $6 { printf "%.0f\n", $6 / 50 * 100 }'
   unit_of_measurement: '%'
   scan_interval: 14400

 - platform: command_line
   name: Epson Ink Level Photo Black
   command: /usr/bin/curl -X GET http://192.168.1.57/PRESENTATION/HTML/TOP/PRTINFO.HTML  | awk -F"'" '/Ink_K.PNG/ {i++}i==2 && $6+0 == $6 { printf "%.0f\n", $6 / 50 * 100; exit }'
   unit_of_measurement: '%'
   scan_interval: 14400

 - platform: template
   sensors:
     front_door_action:
       friendly_name: 'Front Door Action'
       value_template: >
         {% if is_state('sensor.front_door_lock_alarm_type', '22') %}
           Manual Unlock
         {% elif is_state('sensor.front_door_lock_alarm_type', '21') %}
           Manual Lock
         {% elif is_state('sensor.front_door_lock_alarm_type', '19') %}
           Keypad Unlock
         {% elif is_state('sensor.front_door_lock_alarm_type', '18') %}
           Keypad Lock
         {% elif is_state('sensor.front_door_lock_alarm_type', '25') %}
           Wireless Unlock
         {% elif is_state('sensor.front_door_lock_alarm_type', '24') %}
           Wireless Lock
         {% elif is_state('sensor.front_door_lock_alarm_type', '9') %}
           Lock Jammed
         {% elif is_state('sensor.front_door_lock_alarm_type', '161') %}
           Tamper Alarm
         {% else %}
           Other
         {% endif %}

 - platform: template
   sensors:
     front_door_code:
       friendly_name: 'Front Door Code'
       value_template: >
          {% if is_state('sensor.front_door_lock_alarm_level', '1') %}
            Us
          {% elif is_state('sensor.front_door_lock_alarm_level', '2') %}
            Dad
          {% elif is_state('sensor.front_door_lock_alarm_level', '3') %}
            Zoo Keeper
          {% elif is_state('sensor.front_door_lock_alarm_level', '4') %}
            Courtney
          {% elif is_state('sensor.front_door_lock_alarm_level', '5') %}
            Izzy
          {% else %}
            Locked
          {% endif %}

 - platform: template
   sensors:
     harmony_den_activity:
       value_template: "{{ state_attr('remote.harmony_hub_den', 'current_activity') }}"
       friendly_name: Harmony Den Input

 - platform: template
   sensors:
     harmony_bed_activity:
       value_template: "{{ state_attr('remote.harmony_hub_bedroom', 'current_activity') }}"
       friendly_name: Harmony Bed Input
     house_vacuum_status:
       value_template: "{{ state_attr('vacuum.mrs_neato', 'status') }}"
       friendly_name: House Vacuum Status
     den_vacuum_status:
       value_template: "{{ state_attr('vacuum.mr_neato', 'status') }}"
       friendly_name: Den Vacuum Status

 - platform: template
   sensors:
     inside_outside_temp:
       friendly_name: Inside vs Outside Temperature
       value_template: >-
         {% if states('sensor.thermostat_temperature') > states('sensor.shokabow_weather_temperature') %}
           True
         {% else %}
           False
         {% endif %}

 - platform: uptime
 
 - platform: waqi
   token: !secret aqi_key
   locations:
   - losangeles
   stations:
   - "Reseda, Los Angeles"
   
 - platform: systemmonitor
   resources:
   - type: disk_use_percent
     arg: "/home"
   - type: memory_use_percent
   - type: processor_use
   
 # - platform: gearbest
   # currency: USD
   # items:
   # - url: https://www.gearbest.com/home-smart-improvements/pp_268522.html
     # name: Xiaomi Air Purifier 2
   # - url: https://www.gearbest.com/home-smart-improvements/pp_668897.html
     # name: Xiaomi Leak Sensor
   # - url: https://www.gearbest.com/access-control/pp_626703.html
     # name: Xiaomi Contact Sensor
     
 - platform: plex
   host: 192.168.1.60
   token: !secret plex_token
   
 # - platform: speedtest
   # monitored_conditions:
   # - ping
   # - download
   # - upload
   # manual: true
   #server_id: 7456 #quadranet
   #server_id: 2953 #atlantic metro
   #server_id: 5861 #webnx
   #server_id: 5827 #twc
   #server_id: 10564 #speedtest
   
 - platform: cert_expiry
   host: !secret cert_expiry_host
   
 - platform: filesize
   file_paths:
   - /home/homeassistant/.homeassistant/home-assistant_v2.db
   
 # - platform: darksky
   # api_key: !secret darksky_api
   # units: us
   # update_interval: "00:05"
   # monitored_conditions:
   # - summary
   # - icon
   # - apparent_temperature
   # - temperature
   # - humidity
   # - precip_probability
   # - precip_intensity
   # - wind_speed
   # - pressure
   # - wind_bearing
   # - precip_type
   # - nearest_storm_distance
   # - cloud_cover
   # - visibility

 - platform: zestimate
   api_key: !secret zillow_api
   zpid:
   - !secret zillow_zpid

 - platform: mqtt
   state_topic: !secret mqtt_danny_bedroom
   value_template: '{{ value_json.confidence }}'
   unit_of_measurement: '%'
   name: 'Danny Bedroom'

 - platform: mqtt
   state_topic: !secret mqtt_tosh_bedroom
   value_template: '{{ value_json.confidence }}'
   unit_of_measurement: '%'
   name: 'Tosh Bedroom'

 - platform: mqtt
   state_topic: !secret mqtt_danny_den
   value_template: '{{ value_json.confidence }}'
   unit_of_measurement: '%'
   name: 'Danny Den'

 - platform: mqtt
   state_topic: !secret mqtt_tosh_den
   value_template: '{{ value_json.confidence }}'
   unit_of_measurement: '%'
   name: 'Tosh Den'

 # - platform: rest
   # resource: !secret plantlink_arti
   # scan_interval: 6000
   # method: GET
   # authentication: basic
   # headers:
     # Authorization: !secret plantlink_key
   # verify_ssl: false
   # name: Artichoke Status
   # value_template: >-
                # {% if value_json.status == '0' %}
                  # Needs Water
                # {% elif value_json.status == '1' %}
                  # Dry
                # {% elif value_json.status == '2' %}
                  # Good
                # {% elif value_json.status == '3' %}
                  # Good
                # {% elif value_json.status == '4' %}
                  # Too Wet
                # {% else %}
                  # value_json.status
                # {% endif %}

 # - platform: rest
   # resource: !secret plantlink_arti
   # scan_interval: 6000
   # method: GET
   # authentication: basic
   # headers:
     # Authorization: !secret plantlink_key
   # verify_ssl: false
   # name: Artichoke Moisture
   # sensor_class: moisture
   # unit_of_measurement: '%'
   # value_template: '{{ (value_json.last_measurements[0]["moisture"]) | round(3) * 100 }}'
   
 # - platform: rest
   # resource: !secret plantlink_arti
   # scan_interval: 6000
   # method: GET
   # authentication: basic
   # headers:
     # Authorization: !secret plantlink_key
   # verify_ssl: false
   # name: Artichoke Fuel
   # value_template: '{{ value_json.last_measurements[0]["plant_fuel_level"] | round(3) }}'
   
 # - platform: rest
   # resource: !secret plantlink_arti
   # scan_interval: 6000
   # method: GET
   # authentication: basic
   # headers:
     # Authorization: !secret plantlink_key
   # verify_ssl: false
   # name: Artichoke Signal
   # unit_of_measurement: '%'
   # value_template: '{{ float(value_json.last_measurements[0]["signal"]) * 100 | round(3) }}'
   
 # - platform: rest
   # resource: !secret plantlink_arti
   # scan_interval: 6000
   # method: GET
   # authentication: basic
   # headers:
     # Authorization: !secret plantlink_key
   # verify_ssl: false
   # name: Artichoke Battery
   # unit_of_measurement: '%'
   # value_template: '{{ float(value_json.last_measurements[0]["battery"]) * 100 | round(3) }}'
   
 # - platform: rest
   # resource: !secret plantlink_arti
   # scan_interval: 6000
   # method: GET
   # authentication: basic
   # headers:
     # Authorization: !secret plantlink_key
   # verify_ssl: false
   # name: Artichoke Last Updated
   # value_template: '{{ value_json.last_measurements[0]["updated"] | timestamp_local }}'
   
 # - platform: rest
   # resource: !secret plantlink_arti
   # scan_interval: 6000
   # method: GET
   # authentication: basic
   # headers:
     # Authorization: !secret plantlink_key
   # verify_ssl: false
   # name: Artichoke Next Water
   # value_template: '{{ value_json.last_measurements[0]["predicted_water_needed"] | timestamp_local }}'

 # - platform: geo_rss_events
   # name: USGS All Earthquakes
   # url: https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.atom
   # categories:
     # - 'Past Hour'
     # - 'Past Day'

 # - platform: geo_rss_events
   # name: NSW Fire Service
   # url: http://www.fire.ca.gov/rss/rss.xml
   # unit_of_measurement: 'Incidents'

 - platform: google_home_alarm
   host: 192.168.1.89

 - platform: google_home_alarm
   host: 192.168.1.13

 - platform: google_home_alarm
   host: 192.168.1.50

 - platform: google_home_alarm
   host: 192.168.1.43

 - platform: google_home_alarm
   host: 192.168.1.49

 - platform: google_home_alarm
   host: 192.168.1.45

 - platform: launch_library

 - platform: tautulli
   api_key: !secret tautulli_api
   host: 192.168.1.60
   port: 8181/stats